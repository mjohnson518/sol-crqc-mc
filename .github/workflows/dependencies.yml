name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 3am UTC
    - cron: '0 3 * * 1'
  workflow_dispatch:

jobs:
  update-deps:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools
    
    - name: Check for outdated packages
      run: |
        pip list --outdated > outdated_packages.txt
        if [ -s outdated_packages.txt ]; then
          echo "## ðŸ“¦ Outdated Packages Found" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat outdated_packages.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "âœ… All packages are up to date!" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Security check with safety
      continue-on-error: true
      run: |
        pip install safety
        echo "## ðŸ”’ Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        safety check --json || true >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
    
    - name: Create issue for updates
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const outdatedPath = 'outdated_packages.txt';
          
          if (fs.existsSync(outdatedPath)) {
            const outdated = fs.readFileSync(outdatedPath, 'utf8');
            
            if (outdated.trim()) {
              // Check if issue already exists
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: 'dependencies',
                state: 'open'
              });
              
              if (issues.data.length === 0) {
                // Create new issue
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: `ðŸ”„ Weekly Dependency Update Check - ${new Date().toISOString().split('T')[0]}`,
                  body: `## Outdated Dependencies Found\n\n\`\`\`\n${outdated}\`\`\`\n\nPlease review and update as necessary.`,
                  labels: ['dependencies', 'maintenance']
                });
              }
            }
          }
